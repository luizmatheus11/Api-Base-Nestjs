generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid()) @db.Uuid
  username  String   @unique @db.VarChar()
  password  String   @db.VarChar()
  accountId String   @unique @map("account_id") @db.Uuid
  account   Accounts @relation(fields: [accountId], references: [id], onDelete: Cascade)
}

model Accounts {
  id                  String         @id @default(uuid()) @db.Uuid
  balance             Float          @db.Real()
  Users               Users?
  debitedTransaction  Transactions[] @relation(name: "debitedAccountTransaction")
  creditedTransaction Transactions[] @relation(name: "creditedAccountTransaction")
}

model Transactions {
  id                String    @id @default(uuid()) @db.Uuid
  debitedAccountId  String    @map("debited_account_id") @db.Uuid
  creditedAccountId String    @map("credited_account_id") @db.Uuid
  value             Float     @db.Real()
  createdAt         DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  debitedAccount    Accounts? @relation(fields: [debitedAccountId], references: [id], onDelete: Cascade, name: "debitedAccountTransaction")
  creaditedAccount  Accounts? @relation(fields: [creditedAccountId], references: [id], onDelete: Cascade, name: "creditedAccountTransaction")
}
